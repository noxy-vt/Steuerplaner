<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
  <title>Steuer-App mit 3 Reitern</title>
  <style>
    * {
      box-sizing: border-box;
    }
    body {
      margin: 0;
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
        Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
      background-color: #f9fafb;
      display: flex;
      flex-direction: column;
      height: 100vh;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    main {
      flex: 1 1 auto;
      overflow-y: auto;
      padding: 20px;
      background: white;
    }

    h2 {
      margin-top: 0;
      font-weight: 700;
      font-size: 24px;
      color: #111827;
    }

    /* Tabbar unten */
    nav {
      flex-shrink: 0;
      display: flex;
      height: 56px;
      background: #ffffff;
      box-shadow: 0 -1px 8px rgba(0,0,0,0.1);
      border-top-left-radius: 12px;
      border-top-right-radius: 12px;
      user-select: none;
    }

    nav button {
      flex: 1;
      background: none;
      border: none;
      outline: none;
      cursor: pointer;
      font-weight: 600;
      font-size: 14px;
      color: #6b7280;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      padding: 4px 0;
      transition: color 0.3s ease;
      font-family: inherit;
    }

    nav button.active {
      color: #2563eb;
      font-weight: 700;
      border-top: 3px solid #2563eb;
      padding-top: 1px;
    }

    /* Icons (einfach mit Emoji, kann durch SVG ersetzt werden) */
    nav button span.icon {
      font-size: 20px;
      margin-bottom: 2px;
      line-height: 1;
    }

    /* Inhalt Tabs */
    .tab-content {
      display: none;
    }
    .tab-content.active {
      display: block;
    }

    /* Liste Kategorien */
    .category-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    .category-list li {
      padding: 12px 16px;
      border-bottom: 1px solid #e5e7eb;
      font-weight: 600;
      font-size: 18px;
      color: #374151;
      display: flex;
      justify-content: space-between;
    }
    .category-list li:last-child {
      border-bottom: none;
    }

    /* Beleg-Liste */
    .receipt-list {
      margin-top: 12px;
      list-style: none;
      padding: 0;
      max-height: 220px;
      overflow-y: auto;
      border: 1px solid #cbd5e1;
      border-radius: 10px;
    }
    .receipt-list li {
      padding: 8px 12px;
      border-bottom: 1px solid #e5e7eb;
      font-size: 16px;
      color: #374151;
      display: flex;
      justify-content: space-between;
      cursor: default;
    }
    .receipt-list li:last-child {
      border-bottom: none;
    }

    /* Formular Styles */
    form label {
      display: block;
      font-weight: 600;
      color: #4b5563;
      margin-top: 18px;
      margin-bottom: 6px;
      font-size: 16px;
      user-select: none;
    }
    form input, form select {
      width: 100%;
      padding: 12px 14px;
      font-size: 16px;
      border: 1.5px solid #cbd5e1;
      border-radius: 10px;
      font-family: inherit;
      color: #111827;
      transition: border-color 0.25s ease;
    }
    form input:focus, form select:focus {
      outline: none;
      border-color: #2563eb;
      box-shadow: 0 0 8px #93c5fd;
    }
    form button {
      margin-top: 28px;
      padding: 14px;
      width: 100%;
      font-size: 18px;
      font-weight: 700;
      color: white;
      background-color: #2563eb;
      border: none;
      border-radius: 12px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      user-select: none;
    }
    form button:hover {
      background-color: #1e40af;
    }

    /* Steuertipps */
    .tip {
      background-color: #e0f2fe;
      border-left: 4px solid #3b82f6;
      padding: 14px 18px;
      margin-bottom: 14px;
      border-radius: 8px;
      font-size: 16px;
      color: #1e40af;
      user-select: none;
    }

  </style>
</head>
<body>

  <main>
    <!-- √úbersicht Tab -->
    <section id="overview" class="tab-content active" aria-label="√úbersicht">
      <h2>√úbersicht</h2>
      <ul class="category-list" id="category-summary">
        <!-- Kategorien und Summen -->
      </ul>
      <div id="receipts-by-category">
        <!-- Hier Belege je Kategorie -->
      </div>
    </section>

    <!-- Upload Tab -->
    <section id="upload" class="tab-content" aria-label="Beleg Upload">
      <h2>Beleg hinzuf√ºgen</h2>
      <form id="receipt-form" novalidate>
        <label for="date">Datum *</label>
        <input type="date" id="date" name="date" required />

        <label for="amount">Betrag (‚Ç¨) *</label>
        <input type="number" id="amount" name="amount" step="0.01" min="0" placeholder="z. B. 123,45" required />

        <label for="category">Kategorie *</label>
        <select id="category" name="category" required>
          <option value="" disabled selected>Bitte w√§hlen</option>
          <option>Gesundheit</option>
          <option>Werbungskosten</option>
          <option>Spenden</option>
          <option>Fahrtkosten</option>
          <option>Sonstiges</option>
        </select>

        <label for="description">Beschreibung (optional)</label>
        <input type="text" id="description" name="description" placeholder="z. B. Arztbesuch, Brillenreparatur" />

        <label for="file">Beleg (PDF/Bild)</label>
        <input type="file" id="file" name="file" accept=".pdf,image/*" />

        <button type="submit">Beleg speichern</button>
      </form>
    </section>

    <!-- Steuertipps Tab -->
    <section id="tax-tips" class="tab-content" aria-label="Steuertipps">
      <h2>Steuertipps & Hilfen</h2>
      <div class="tip">üßæ Werbungskosten k√∂nnen z.B. Fahrtkosten, Fachliteratur und Arbeitsmittel umfassen.</div>
      <div class="tip">üè† Home-Office-Pauschale gilt bis zu 600 ‚Ç¨ j√§hrlich, wenn du einen separaten Raum hast.</div>
      <div class="tip">üéì Weiterbildungskosten sind absetzbar, wenn sie beruflich relevant sind.</div>
      <div class="tip">üí° Sammle das ganze Jahr Belege, um keine Ausgaben zu vergessen!</div>
    </section>
  </main>

  <nav role="tablist" aria-label="Hauptnavigation">
    <button role="tab" aria-selected="true" aria-controls="overview" id="tab-overview" class="active">
      <span class="icon">üìä</span> √úbersicht
    </button>
    <button role="tab" aria-selected="false" aria-controls="upload" id="tab-upload">
      <span class="icon">üì§</span> Upload
    </button>
    <button role="tab" aria-selected="false" aria-controls="tax-tips" id="tab-tips">
      <span class="icon">üí°</span> Tipps
    </button>
  </nav>

  <script>
    // Tab-Steuerung
    const tabs = document.querySelectorAll('nav button');
    const contents = document.querySelectorAll('.tab-content');

    tabs.forEach(tab => {
      tab.addEventListener('click', () => {
        // Aktiviere Tab
        tabs.forEach(t => {
          t.classList.remove('active');
          t.setAttribute('aria-selected', 'false');
        });
        tab.classList.add('active');
        tab.setAttribute('aria-selected', 'true');

        // Zeige zugeh√∂rigen Content, verstecke andere
        contents.forEach(c => {
          c.classList.remove('active');
        });
        document.getElementById(tab.getAttribute('aria-controls')).classList.add('active');
      });
    });

    // Beispiel-Daten f√ºr √úbersicht
    const exampleReceipts = [
      { date: '2025-07-01', amount: 45.5, category: 'Gesundheit', description: 'Arztbesuch' },
      { date: '2025-06-15', amount: 120, category: 'Werbungskosten', description: 'Fahrtkosten' },
      { date: '2025-05-20', amount: 30, category: 'Spenden', description: 'Spende an Verein' },
      { date: '2025-04-10', amount: 75.9, category: 'Gesundheit', description: 'Medikamente' },
    ];

    // Daten gruppieren & Summen berechnen
    function summarizeCategories(receipts) {
      const summary = {};
      receipts.forEach(r => {
        if (!summary[r.category]) {
          summary[r.category] = 0;
        }
        summary[r.category] += r.amount;
      });
      return summary;
    }

    // √úbersicht rendern
    function renderOverview() {
      const summary = summarizeCategories(exampleReceipts);
      const catList = document.getElementById('category-summary');
      const receiptsByCatDiv = document.getElementById('receipts-by-category');
      catList.innerHTML = '';
      receiptsByCatDiv.innerHTML = '';

      // Kategorien & Summen
      for (const [cat, sum] of Object.entries(summary)) {
        const li = document.createElement('li');
        li.textContent = `${cat}`;
        const span = document.createElement('span');
        span.textContent = `${sum.toFixed(2)} ‚Ç¨`;
        li.appendChild(span);
        catList.appendChild(li);
      }

      // Belege pro Kategorie
      for (const cat of Object.keys(summary)) {
        const catReceipts = exampleReceipts.filter(r => r.category === cat);
        const section = document.createElement('section');
        const h3 = document.createElement('h3');
        h3.textContent = cat;
        h3.style.marginTop = '24px';
        h3.style.color = '#2563eb';
        h3.style.fontWeight = '700';
        section.appendChild(h3);

        const ul = document.createElement('ul');
        ul.className = 'receipt-list';

        catReceipts.forEach(r => {
          const li = document.createElement('li');
          li.textContent = `${r.date} - ${r.description || '-'} `;
          const amtSpan = document.createElement('span');
          amtSpan.textContent = `${r.amount.toFixed(2)} ‚Ç¨`;
          li.appendChild(amtSpan);
          ul.appendChild(li);
        });

        section.appendChild(ul);
        receiptsByCatDiv.appendChild(section);
      }
    }

    renderOverview();

    // Formular absenden
    document.getElementById('receipt-form').addEventListener('submit', function(e) {
      e.preventDefault();

      const date = this.date.value;
      const amount = parseFloat(this.amount.value);
      const category = this.category.value;
      const description = this.description.value;

      if (!date || !amount || !category || isNaN(amount) || amount <= 0) {
        alert('Bitte Datum, Betrag und Kategorie korrekt ausf√ºllen.');
        return;
      }

      // Neuen Beleg hinzuf√ºgen (hier nur lokal f√ºr Demo)
      exampleReceipts.push({ date, amount, category, description });
      renderOverview();

      alert(`Beleg gespeichert:\nDatum: ${date}\nBetrag: ${amount.toFixed(2)} ‚Ç¨\nKategorie: ${category}`);

      this.reset();
      // Automatisch zur√ºck zur √úbersicht
      document.getElementById('tab-overview').click();
    });
  </script>

</body>
</html>
